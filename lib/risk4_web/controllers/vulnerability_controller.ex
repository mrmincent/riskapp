defmodule Risk4Web.VulnerabilityController do
  use Risk4Web, :controller

  alias Risk4.Assessment
  alias Risk4.Assessment.Vulnerability

  def index(conn, _params) do
    vulnerabilities = Assessment.list_vulnerabilities()
    render(conn, :index, vulnerabilities: vulnerabilities)
  end

  def new(conn, _params) do
    changeset = Assessment.change_vulnerability(%Vulnerability{})
    statuses = Risk4.Repo.all(Risk4.Shared.Status) # Fetch the list of statuses
    render(conn, :new, changeset: changeset, statuses: statuses)
  end

  def create(conn, %{"vulnerability" => vulnerability_params}) do
    case Assessment.create_vulnerability(vulnerability_params) do
      {:ok, vulnerability} ->
        conn
        |> put_flash(:info, "Vulnerability created successfully.")
        |> redirect(to: ~p"/vulnerabilities/#{vulnerability}")

      {:error, %Ecto.Changeset{} = changeset} ->
        render(conn, :new, changeset: changeset)
    end
  end

  def show(conn, %{"id" => id}) do
    vulnerability = Assessment.get_vulnerability!(id)
    render(conn, :show, vulnerability: vulnerability)
  end

  def edit(conn, %{"id" => id}) do
    vulnerability = Assessment.get_vulnerability!(id)
    changeset = Assessment.change_vulnerability(vulnerability)
    statuses = Risk4.Repo.all(Risk4.Shared.Status) # Fetch the list of statuses
    render(conn, :edit, vulnerability: vulnerability, changeset: changeset)
  end

  def update(conn, %{"id" => id, "vulnerability" => vulnerability_params}) do
    vulnerability = Assessment.get_vulnerability!(id)

    case Assessment.update_vulnerability(vulnerability, vulnerability_params) do
      {:ok, vulnerability} ->
        conn
        |> put_flash(:info, "Vulnerability updated successfully.")
        |> redirect(to: ~p"/vulnerabilities/#{vulnerability}")

      {:error, %Ecto.Changeset{} = changeset} ->
        render(conn, :edit, vulnerability: vulnerability, changeset: changeset)
    end
  end

  def delete(conn, %{"id" => id}) do
    vulnerability = Assessment.get_vulnerability!(id)
    {:ok, _vulnerability} = Assessment.delete_vulnerability(vulnerability)

    conn
    |> put_flash(:info, "Vulnerability deleted successfully.")
    |> redirect(to: ~p"/vulnerabilities")
  end
end
